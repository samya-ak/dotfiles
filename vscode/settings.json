{
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    }
  ],
  "editor.rulers": [80],
  "editor.scrollBeyondLastLine": false,
  "editor.scrollBeyondLastColumn": 8,
  "search.showLineNumbers": true,
  "editor.find.seedSearchStringFromSelection": "always",
  "editor.find.autoFindInSelection": "never",
  "editor.renderWhitespace": "none",
  "editor.guides.indentation": true,
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.smoothScrolling": false,
  "editor.cursorSmoothCaretAnimation": "off",
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "never"
  },
  "eslint.validate": ["javascript", "typescript"],
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",

      "command": "workbench.action.showCommands"
    },
    {
      "key": "/",
      "name": "comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "<C-/>"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Find files (Telescope)",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "s",
          "name": "Search text (Live grep)",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "c",
          "name": "Find word under cursor",
          "type": "command",
          "command": "editor.action.addSelectionToNextFindMatch"
        },
        {
          "key": "b",
          "name": "Find buffers",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "h",
          "name": "Help tags",
          "type": "command",
          "command": "workbench.action.showCommands"
        },
        {
          "key": "r",
          "name": "Replace in files",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },

    {
      "key": "m",
      "name": "minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    {
      "key": "n",
      "name": "highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "v",
          "name": "Split window vertically",
          "type": "command",
          "command": "workbench.action.splitEditor"
        },
        {
          "key": "h",
          "name": "Split window horizontally",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "e",
          "name": "Make split windows equal",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "x",
          "name": "Close current split window",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "r",
          "name": "Search and replace word under cursor",
          "type": "command",
          "command": "editor.action.changeAll"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        }
      ]
    },
    {
      "key": "T",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "gopls": {
    "build.experimentalWorkspaceModule": true
  },
  "terminal.external.osxExec": "iTerm.app",
  "terminal.explorerKind": "external",
  "workbench.iconTheme": "vscode-icons",
  "editor.fontFamily": "Jetbrains Mono",
  "explorer.confirmDelete": false,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[C/C++]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "go.lintOnSave": "file",
  "go.formatTool": "goimports",
  "[go]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
  },
  "go.docsTool": "gogetdoc",
  "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 2, ColumnLimit: 0}",
  "vsicons.dontShowNewVersionMessage": true,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "editor.lineNumbers": "relative",
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    "editor.formatOnType": true
  },
  "go.toolsManagement.autoUpdate": true,
  "java.help.firstView": "gettingStarted",
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "files.insertFinalNewline": true,
  "workbench.colorTheme": "One Dark Pro",
  "bracketPairColorizer.depreciation-notice": false,
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.tabSize": 2,
  "editor.insertSpaces": false,
  "editor.detectIndentation": false,
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "gslang.author": "samyakmaharjan",
  "[gs]": {
    "editor.defaultFormatter": null
  },
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.fontFamily": "FiraCode Nerd Font",
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.minimap.enabled": false,
  "editor.fontSize": 14,
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "diffEditor.ignoreTrimWhitespace": false,
  "terminal.integrated.lineHeight": 1.2,
  "terminal.integrated.fontSize": 13,
  "[dockercompose]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-containers"
  },
  "window.zoomLevel": -1,
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  // Vim configuration to match Neovim settings
  "vim.leader": " ",
  "vim.useCtrlKeys": true,

  // Fix tab functionality
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    "<C-p>": false,
    "<Tab>": false,
    "<S-Tab>": false,
    "<C-t>": false,
    "<C-d>": true
  },

  // Cursor configuration for consistent visual feedback
  "vim.cursorStylePerMode": {
    "normal": "block",
    "insert": "line",
    "visual": "block",
    "visualline": "block",
    "visualblock": "block",
    "replace": "underline"
  },

  "vim.hlsearch": false,
  "vim.incsearch": true,
  "vim.smartcase": true,
  "vim.ignorecase": true,
  "vim.scrolloff": 8,
  "vim.sidescrolloff": 8,
  "vim.textwidth": 80,
  "vim.wrap": false,
  "vim.whichwrap": "",
  "vim.startofline": false,
  "vim.showcmd": true,
  "vim.showmode": false,
  "vim.cursorline": true,

  // Additional vim normal mode key bindings to match Neovim config
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "p", "v"],
      "commands": ["workbench.view.explorer"]
    },
    {
      "before": ["<leader>", "f", "f"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<leader>", "f", "s"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["<leader>", "f", "b"],
      "commands": ["workbench.action.showAllEditors"]
    },
    {
      "before": ["<leader>", "s", "v"],
      "commands": ["workbench.action.splitEditor"]
    },
    {
      "before": ["<leader>", "s", "h"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      "before": ["<leader>", "s", "e"],
      "commands": ["workbench.action.evenEditorWidths"]
    },
    {
      "before": ["<leader>", "s", "x"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["<leader>", "y"],
      "commands": ["editor.action.clipboardCopyAction"]
    },
    {
      "before": ["<leader>", "Y"],
      "commands": ["editor.action.clipboardCopyAction"]
    },
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    {
      "before": ["<C-d>"],
      "after": ["<C-d>", "z", "z"]
    },
    {
      "before": ["<C-u>"],
      "after": ["<C-u>", "z", "z"]
    },
    {
      "before": ["n"],
      "after": ["n", "z", "z", "z", "v"]
    },
    {
      "before": ["N"],
      "after": ["N", "z", "z", "z", "v"]
    },
    {
      "before": ["J"],
      "after": ["m", "z", "J", "`", "z"]
    },
    {
      "before": ["x"],
      "after": ["\"", "_", "x"]
    },
    {
      "before": ["<C-p>"],
      "commands": ["workbench.action.quickOpen"]
    }
  ],

  // Visual mode key bindings to match Neovim config
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<Esc>"],
      "after": ["<Esc>"]
    },
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    },
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    {
      "before": ["<leader>", "y"],
      "commands": ["editor.action.clipboardCopyAction"]
    },
    {
      "before": ["<leader>", "p"],
      "after": ["\"", "_", "d", "P"]
    }
  ],
  "editor.cursorSurroundingLines": 8,

  // Additional settings to match Neovim behavior
  "vscode-neovim.neovimClean": true,
  "vscode-neovim.useWSL": false,
  "vscode-neovim.logLevel": "warn",
  "vscode-neovim.highlightGroups.highlights": {
    "IncSearch": {
      "backgroundColor": "#e06c75",
      "color": "#282c34"
    },
    "Search": {
      "backgroundColor": "#61afef",
      "color": "#282c34"
    }
  },
  // Match Neovim's undofile and backup settings
  "files.autoSave": "off",
  "files.hotExit": "onExitAndWindowClose",
  // Match Neovim's updatetime setting (50ms)
  "editor.quickSuggestionsDelay": 50,
  "editor.parameterHints.cycle": true,
  // Match Neovim's signcolumn = "yes"
  "editor.glyphMargin": true,
  "scm.diffDecorations": "gutter",
  "git.decorations.enabled": true,
  // Match Neovim's termguicolors
  "terminal.integrated.gpuAcceleration": "on",

  // Improve Cursor Visibility
 "editor.cursorBlinking": "solid",
"editor.renderLineHighlight": "all",

// Optional Visual Enhancements
"editor.stickyScroll.enabled": true,

// Vim-like clipboard
"vim.useSystemClipboard": true,

  "[dart]": {
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.selectionHighlight": false,
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off"
	},
	"editor.tabCompletion": "on"
}
